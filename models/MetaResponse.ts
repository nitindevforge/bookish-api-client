/**
 * Bookish API
 * The bookish API description
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Book } from '../models/Book';
import { Events } from '../models/Events';
import { Location } from '../models/Location';
import { UserBooks } from '../models/UserBooks';
import { UserDetails } from '../models/UserDetails';
import { HttpFile } from '../http/http';

export class MetaResponse {
    'userId': UserDetails;
    'eventId': Events;
    'bookId': Book;
    'reviewBookId': UserBooks;
    'location': Location;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "userId",
            "baseName": "userId",
            "type": "UserDetails",
            "format": ""
        },
        {
            "name": "eventId",
            "baseName": "eventId",
            "type": "Events",
            "format": ""
        },
        {
            "name": "bookId",
            "baseName": "bookId",
            "type": "Book",
            "format": ""
        },
        {
            "name": "reviewBookId",
            "baseName": "reviewBookId",
            "type": "UserBooks",
            "format": ""
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "Location",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return MetaResponse.attributeTypeMap;
    }

    public constructor() {
    }
}
